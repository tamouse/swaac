[[file:%7B%%20link%20_posts/2013-09-28-jekyll-making-posts-sticky.markdown%20%%7D][Last
time]], I talked about using categories to make a post sticky. This eats
up a category, though, and can make the post's permalink look silly.

** Use a Page Variable
   :PROPERTIES:
   :CUSTOM_ID: use-a-page-variable
   :END:

This time, we're just going to use a page variable to do it.

In your posts that you want to be sticky, add a page variable to the
front matter:

** {% highlight yaml %}
   :PROPERTIES:
   :CUSTOM_ID: highlight-yaml
   :END:

layout: post sticky: true # ... --- {% endhighlight %}

Then in your page where you want the sticky posts to appear first, use
the following template:

{% highlight html %}{% raw %} {% for post in site.posts %}{% if
post.sticky %} * [[file:%7B%7Bpost.url%7D%7D][{{post.title}}]]
{{post.date|date\_to\_string}} {% endif %}{% endfor %}

{% for post in site.posts %}{% unless post.sticky %} *
[[file:%7B%7Bpost.url%7D%7D][{{post.title}}]]
{{post.date|date\_to\_string}} {% endunless %}{% endfor %} {% endraw
%}{% endhighlight %}

If you wanted the sticky posts to show up again in the lower section,
just remove the =unless-endunless= condition in the second loop.

--------------

** Use a Collection
   :PROPERTIES:
   :CUSTOM_ID: use-a-collection
   :END:

The above solution is still a bit crude, and doesn't really lend itself
to pagination.

Perhaps a better solution to try for is set up a collection of sticky
posts and deal with them completely separately from your regular posts.

In =_config.yml=

{% highlight yaml %} collections: - important {% endhighlight %}

Create the sticky posts in the =_important= folder like regular posts.

The file you want to show the sticky and regular post then can have the
following construction:

{% highlight html %}{% raw %} {% for post in site.important %} *
[[file:%7B%7Bpost.url%7D%7D][{{post.title}}]]
{{post.date|date\_to\_string}} {% endfor %}

{% for post in site.posts %} *
[[file:%7B%7Bpost.url%7D%7D][{{post.title}}]]
{{post.date|date\_to\_string}} {% endfor %} {% endraw %}{% endhighlight
%}

--------------

Works with Jekyl 3.5.2. YMMV.
