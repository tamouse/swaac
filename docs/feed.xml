<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://github.com/tamouse/swaac</id>
  <title>Tamouse&#39;s Software as a Craft blog</title>
  <updated>2024-06-29T19:18:07-05:00</updated>
    <entry>
      <id>https://github.com/tamouse/swaac/blob/master/posts/2024/2024-06-29-removing-dsstore-from-aws-s3.org</id>
      <updated>2024-06-29T19:18:07-05:00</updated>
      <title>2024-06-29-removing-dsstore-from-aws-s3</title>
      <content>#+title: 2024 06 29 Removing .DS_Store From AWS S3

** Intro

Maybe this never happens to anyone else, but it seems like it&#39;s always happening to me.

I&#39;ll use the =aws s3 sync= command without thinking, and there will be a bunch of =.DS_Store= files littered down the folders on my mac. Aggravating!

I have a script that lists them in the =--exclude= option, but that option gets ignored if there is already a file that matches the pattern.

So what the juice?

** A long-ish command:

#+begin_src bash
aws s3 ls --recursive s3://bucket_name/path |\
    fgrep &#39;.DS_Store&#39; | \
    sed -e &#39;s/^.*Doc/s3:\/\/tt-archive\/Doc/&#39; -e &#39;s/ /\\ /g&#39; | \
    xargs -n1 aws s3 rm
#+end_src

... and Bob&#39;s yer uncle.

No warrantees, your mileage will vary. If you end up deleting your bucket, I&#39;m sorry, but ...

** Okay, more explainenening

Let&#39;s start here:

#+begin_src bash
aws s3 ls --recursive s3://bucket_name/path
#+end_src

Substitute your bucket name, &#39;the-grippers-bucket&#39; for example, in place of &#39;bucket&#39;:

#+begin_src bash
aws s3 ls --recursive s3://the-grippers-bucket/path
#+end_src

Then, substitute the path where you want to start the search, &#39;last-ten/2024-05-01/11:00:00/&#39; for example, for &#39;path&#39;:

#+begin_src bash
aws s3 ls --recursive s3://the-grippers-bucket/last-ten/2024-05-01/11:00:00/
#+end_src

*** what do it do?

This gives you a list of all objects in that bucket and path.

Then we pipe that into:

** Only get the lines we&#39;re interested in

=fgrep= is a version of the =grep= command that doesn&#39;t use regular expressions in the pattern search. It&#39;s the same as saying =grep -F=, which you could also use.

So,

#+begin_src bash
fgrep &#39;.DS_Store&#39;
#+end_src

is going to pass through to =stdout= every line matching that string, which is the file name we&#39;re looking for.

If you have for some strange reason a match appearing on a line that doesn&#39;t have the exact match, maybe try this instead:\

#+begin_src bash
grep &#39;/.DS_Store$&#39;
#+end_src

which will, *for sure* only match lines /ending/ with =.DS_Store= which are the files we want to get rid of on S3.

** Then we need to munge things a bit

The third line we see our old friend =sed= which is our editing in line pal.

#+begin_src bash
sed -e &#39;s/^.*path/s3:\/\/bucket_name/path&#39; -e &#39;s/ /\\ /g&#39;
#+end_src

You&#39;ll notice the lines coming through from the aws command have a bunch of info in front of the actual object name. We need just the object name. (There&#39;s likely an option to be brief, but I didn&#39;t look it up.) Anyway, the first =-e-= expression removes everything up to your path, and puts back the full bucket name and path so it&#39;s a valid S3 reference.

The second =-e= expression will /escape/ any spaces in the object name, should you be as poor as I am at making decent directory and file names.

The command becomes, based on your example,

#+begin_src bash
sed -e &#39;s/^.*last/s3:\/\/the-grippers-bucket/last&#39; -e &#39;s/ /\\ /g&#39; # Note: you only have to specify enough path to match
#+end_src

** Our favourite worker, xargs

The last command in this pipe is =xargs= which is an amazing workhorse in \*nix. I didn&#39;t learn how to use it until I was a ways along in my career, so don&#39;t feel bad if you&#39;ve never heard of it either. But do look it up, it&#39;s awesome. (It&#39;s vaguely like using reduce in array filtering. Vaguely.)

#+begin_src bash
xargs -n1 aws s3 rm
#+end_src

So this is going to take the lines coming in the pipe from the =sed= command, taking each one individually (the =-n1= option), prepend =aws s3 rm= to the line, and then */execute/* that line in a subshell. How nifty is that?!

This is what I used to do before I learned =xargs=:

#+begin_src bash
sed -e &#39;s/^/aws s3 rm /&#39; | sh -xv
#+end_src

IDK, I like =xargs= better. :smile:

** The big pipe

So this is a deconstruction of that long pipe command above. I hope this is helpful. If you don&#39;t understand the commands, or what \*nix pipes are, or even the basics of command line usage, there&#39;s lots of documentation on that. You can learn it! Be like my friend [[https://jvns.ca][b0rk (Julia Evans)]]; dig in, ask questions online, then write it up.
</content>
      <author>
        <name>Tamara Temple</name>
        <email>tamara@tamouse.org</email>
      </author>
    </entry>
    <entry>
      <id>https://github.com/tamouse/swaac/blob/master/posts/2024/2024-05-31-how-to-force-restart-an-iphone.md</id>
      <updated>2024-06-23T16:05:31-05:00</updated>
      <title>2024-05-31-how-to-force-restart-an-iphone</title>
      <content># How to force restart an iPhone 11 Pro

Source: &lt;https://support.apple.com/guide/iphone/force-restart-iphone-iph8903c3ee6/ios&gt;

Turns out, it&#39;s sort of easy, if you can push the buttons in the exact right way.

I managed to set off the emergency call sequence that dialed 911, and everyone on my ICE list :facepalm: 

&gt; If iPhone isn’t responding, and you can’t turn it off then on, try forcing it to restart.

1. Press and quickly release the volume up button.
2. Press and quickly release the volume down button.
3. Press and hold the side button.
4. When the Apple logo appears, release the side button.

![link text](../../images/iphone-reset-sequence.jpg)

</content>
      <author>
        <name>Tamara Temple</name>
        <email>tamara@tamouse.org</email>
      </author>
    </entry>
    <entry>
      <id>https://github.com/tamouse/swaac/blob/master/posts/2023/2023-04-10-quick-start-for-take-home-tests.md</id>
      <updated>2023-04-11T14:36:45-05:00</updated>
      <title>2023-04-10-quick-start-for-take-home-tests</title>
      <content>---
title: &quot;Quick start for doing take home tests in Ruby and Rails&quot;
date: 2023-04-10T15:20
tags: [ruby,rails,interviews,take-home-tests,tips]
---

Having gone through a number of interviews this year and last, I have had to more than my share of take home tests for propective employers.

The take home test is typically couched as few requirements intended to show how you approach and solve a given problem. While it&#39;s not a truly valid representation of how you&#39;ll perform on the job, it&#39;s certainly a lot more accurate that timed over-the-shoulder programming, which seems to have replaced the dreaded white boarding coding exercises of the past. At least you get to use your own tools to build the response.

Ruby comes with the `bundler` gem, giving us the `bundle` command, with it set of subcommands which is a pretty common pattern in Ruby for command line tools. You&#39;re likely familiar with `bundle install` already,

Rails comes with an application generator, set off by the `rails new ...args`, showing the subcommand pattern already. The `rails new` command has a lot of options and it&#39;s not helpful to spend a lot of time reading up on them if you&#39;re only going to be building some backend features.

## A basic ruby setup ##

Running the command `bundle help gem` shows the options for building a skeleton gem, just like the ones we all bundle and use in our work. Here&#39;s a great start:

``` shell
bundle gem take_home_test -b -t minitest --ci=github --linter=rubocop 
```

The above creates a new directory called &quot;take_home_test&quot; and populates it with files and directories appropriate for building out an CLI app, Going through the options:

- `-b` - created and `exe/` directory and a stub file `exe/take_home_test`. This is the executable for the command line app.
- `t minitest` - sets up the gem to use minitest. You could also use `rspec` instead of minitest if you want.
- `--ci=github` - this is not required, but if you are using github to keep your take home test gem, might as well have it run the tests for you on push, too.
- `--linter=rubocop` - [Rubocop](https://rubocop.org/ &quot;The Ruby Linter/Formatter that Serves and Protects&quot;) is the more popular and agreed upon linter for Ruby. I prefer having it around, but it is optional

The output from the command looks like so (there may be some changes are time goes on):

``` text
Creating gem &#39;take_home_test&#39;...
Changelog enabled in config
rubocop is already configured, ignoring --linter flag.
RuboCop enabled in config
Initializing git repo in /Users/tamouse/tmp/take_home_test
      create  take_home_test/Gemfile
      create  take_home_test/lib/take_home_test.rb
      create  take_home_test/lib/take_home_test/version.rb
      create  take_home_test/sig/take_home_test.rbs
      create  take_home_test/take_home_test.gemspec
      create  take_home_test/Rakefile
      create  take_home_test/README.md
      create  take_home_test/bin/console
      create  take_home_test/bin/setup
      create  take_home_test/.gitignore
      create  take_home_test/test/test_helper.rb
      create  take_home_test/test/test_take_home_test.rb
      create  take_home_test/.github/workflows/main.yml
      create  take_home_test/CHANGELOG.md
      create  take_home_test/.rubocop.yml
      create  take_home_test/exe/take_home_test
```

If this is your first time running `bundle gem`, take some time to peruse the files to get familiar with them.

Before you can run `bundle install` to install the gems, you&#39;ll need to edit the `take_home_test.gemspec` file. You&#39;ll notice a number of &quot;TODO&quot;s. These need to be fixed before the `bundle install` command will work.

``` ruby
# frozen_string_literal: true

require_relative &quot;lib/take_home_test/version&quot;

Gem::Specification.new do |spec|
  spec.name = &quot;take_home_test&quot;
  spec.version = TakeHomeTest::VERSION
  spec.authors = [&quot;Tamara Temple&quot;]
  spec.email = [&quot;tamouse@gmail.com&quot;]

  spec.summary = &quot;take home test example&quot;
  # spec.description = &quot;TODO: Write a longer description or delete this line.&quot;
  spec.homepage = &quot;https://github.com/tamouse/take_home_test&quot;
  spec.required_ruby_version = &quot;&gt;= 2.6.0&quot;

  # spec.metadata[&quot;allowed_push_host&quot;] = &quot;TODO: Set to your gem server &#39;https://example.com&#39;&quot;

  # spec.metadata[&quot;homepage_uri&quot;] = spec.homepage
  # spec.metadata[&quot;source_code_uri&quot;] = &quot;TODO: Put your gem&#39;s public repo URL here.&quot;
  # spec.metadata[&quot;changelog_uri&quot;] = &quot;TODO: Put your gem&#39;s CHANGELOG.md URL here.&quot;

  # Specify which files should be added to the gem when it is released.
  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.
  spec.files = Dir.chdir(File.expand_path(__dir__)) do
    `git ls-files -z`.split(&quot;\x0&quot;).reject do |f|
      (f == __FILE__) || f.match(%r{\A(?:(?:bin|test|spec|features)/|\.(?:git|travis|circleci)|appveyor)})
    end
  end
  spec.bindir = &quot;exe&quot;
  spec.executables = spec.files.grep(%r{\Aexe/}) { |f| File.basename(f) }
  spec.require_paths = [&quot;lib&quot;]

  # Uncomment to register a new dependency of your gem
  # spec.add_dependency &quot;example-gem&quot;, &quot;~&gt; 1.0&quot;

  # For more information and examples about making a new gem, check out our
  # guide at: https://bundler.io/guides/creating_gem.html
end

```
</content>
      <author>
        <name>Tamara Temple</name>
        <email>tamara@tamouse.org</email>
      </author>
    </entry>
    <entry>
      <id>https://github.com/tamouse/swaac/blob/master/posts/2022/2022-07-20-git-moving-head-to-a-previous-commit.org</id>
      <updated>2022-07-20T13:54:15-05:00</updated>
      <title>2022-07-20-git-moving-head-to-a-previous-commit</title>
      <content>#+options: html-link-use-abs-url:nil html-postamble:auto html-preamble:t html-scripts:nil
#+options: html-style:t html5-fancy:t tex:t
#+html_doctype: html5
#+html_container: div
#+html_content_class: content
#+description: How do you get rid of commits you do not want?
#+keywords: git, head, reset, revert
#+html_link_home: https://swaac.dev
#+html_head:
#+html_head_extra:
#+subtitle: When you just don’t want that last commit
#+infojs_opt:
#+creator: &lt;a href=&quot;https://www.gnu.org/software/emacs/&quot;&gt;Emacs&lt;/a&gt; 28.1 (&lt;a href=&quot;https://orgmode.org&quot;&gt;Org&lt;/a&gt; mode 9.5.2)
#+latex_header:
#+TITLE: Git: Moving HEAD to a previous commit

** Oops, didn‘t want that!

Sometimes in the course of development work, we decide that we didn’t actually want a commit.

In a situation I recently ran into, I had done a merge from ~main~, and then the tech lead said to rebase it instead. Luckily, I hadn’t yet pushed to ~origin~ so I could back out of the commit I had made.

But how?

** I hadn’t pushed my branch yet

Following the advice given in this [[https://stackoverflow.com/questions/14243089/git-move-head-back-to-a-previous-commit][StackOverflow]] question, the form of the operation looks like this:

#+BEGIN_SRC shell
  git reset COMMIT_SHA
  git reset --soft HEAD@{1}
  git commit -m &quot;Reverted to COMMIT_SHA&quot;
  git status
  # Check on the uncommitted files, see if you want to salvage any of this work
  git reset --hard
#+END_SRC

~COMMIT_SHA~ is the short or long SHA of the commit I want to roll back to, e.g. &quot;56c637bd8&quot; or &quot;56c637bd8a369373dcfdc62cbdca810658a7fd4e&quot;

In the scenario I was in, I omitted the last ~git reset --hard~ command, so the changes that I was working on prior to the commit were left in their modified state. If I had wanted to just get rid of any changes and start fresh, then I would definitely run the last reset command.

** But what if I had pushed my branch?

In this case, I would have had to use ~git revert~ to revert the commits. Let’s say I want to go back 4 commits from the tip of the branch, aka ~HEAD~.

#+BEGIN_SRC shell
  # Revert the changes specified by the fourth last commit in HEAD and create a new commit with the reverted changes.
  git revert HEAD~3
  git push -u origin BRANCH_NAME
#+END_SRC

Then when my teammates pull my branch for review and testing, it will have a commit with all the changes removed, and the history of the repo will remain intact.

** References

1. [[https://stackoverflow.com/questions/14243089/git-move-head-back-to-a-previous-commit][SO: GIT: move HEAD back to a previous commit]]
2. [[https://git-scm.com/docs/git-reset][Git reset]]
3. [[https://git-scm.com/docs/git-revert][Git revert]]

</content>
      <author>
        <name>Tamara Temple</name>
        <email>tamara@tamouse.org</email>
      </author>
    </entry>
    <entry>
      <id>https://github.com/tamouse/swaac/blob/master/posts/Tech/thor-notes.org</id>
      <updated>2022-07-20T13:00:47-05:00</updated>
      <title>thor-notes</title>
      <content>** Thor Notes

*** What is Thor?

    - http://whatisthor.com/
    - https://github.com/rails/thor
    - https://rdoc.info/gems/thor/Thor

*** Start here for next thor project

    Seriously, this has so much &quot;stock&quot; stuff:

    https://github.com/tamouse/rearrange_books/tree/start-here-for-next-thor-project

**** turn this thing into a thor thor generator!
     Dude, as if you&#39;re the first person to do this?

*** Some given barewords with useful values:

    - &quot;name&quot;: &quot;SuperModule::AnalyticsClass&quot;,
    - &quot;file_name&quot;: &quot;analytics_class&quot;,
    - &quot;file_path&quot;: &quot;super_module/analytics_class&quot;,
    - &quot;class_name&quot;: &quot;SuperModule::AnalyticsClass&quot;


*** Giving a task multiple arguments

    Q: How can I have a task get multiple arguments, like many regular
    POSIX commands?

    Example:

    #+BEGIN_SRC shell-script
      cp source_file source_file source_file source_file ... dest_dir
    #+END_SRC

    Pretty simple:

    #+BEGIN_SRC ruby
      desc &quot;taskname ARGLIST&quot;
      def taskname(*args)
      end
    #+END_SRC

    would let you do:

    #+BEGIN_SRC shell-script
      thor taskname arg1 arg2 arg3 arg4
    #+END_SRC

    and ~args~ in the task would be ~[&quot;arg1&quot;, &quot;arg2&quot;, &quot;arg3&quot;, &quot;arg4&quot;]~



*** Invoke a thor task by giving only a class option
    :PROPERTIES:
    :CAPTURE_DATE: [2016-11-06 Sun 01:11]
    :END:

    From stackoverflow: http://stackoverflow.com/a/7311357/742446

    [...use] Thor.map to invoke a command by only giving an
    option flag:

    #+BEGIN_SRC ruby
      map &#39;-F&#39; =&gt; &#39;foo&#39;
    #+END_SRC

    Now you can also pass parameters

    #+BEGIN_SRC ruby
      mythorcommand -F bar # =&gt; invokes foo(&quot;bar&quot;)
    #+END_SRC

    answered Sep 5 &#39;11 at 17:57 by tfischbach

*** Give thor a default task
    :PROPERTIES:
    :CAPTURE_DATE: [2016-11-06 Sun 01:13]
    :END:

    From stackoverflow: http://stackoverflow.com/a/23955971/742446

    I found a rather &#39;strange&#39; solution for this problem that is working quite well with me.

    You add a default task to Thor. Than you add the method_missing so
    that you can trick Thor into passing the default method as an
    argument if there are parameters to your application.

    Taking from your example, the solution would look like this:

    #+BEGIN_SRC ruby
      class MyThorCommand &lt; Thor
	default_task :my_default

	desc &quot;my_default&quot;, &quot;A simple default&quot;
	def my_default(*args)
          puts args.inspect
	end

	def method_missing(method, *args)
          args = [&quot;my_default&quot;, method.to_s] + args
          MyThorCommand.start(args)
	end

      end

      MyThorCommand.start(ARGV)
    #+END_SRC

    If this is in the file &quot;my_thor.rb&quot; an execution &quot;ruby my_thor.rb
    foo bar&quot; would show &#39;[&quot;foo&quot;, &quot;bar&quot;]&#39; as a result.

    answered May 30 &#39;14 at 13:38 by Edu

*** Making Thor scripts colourful

   capture date: [2015-10-11 Sun 02:06]

   In Thor::Actions, the various output commands can be made nicely
   colourful. You can append symbols representing various colours after
   the output string. For example:

   #+begin_src ruby
     say &quot;This will make you green with envy&quot;, :green
     say &quot;Don&#39;t be sad&quot;, :blue
     say &quot;ACK! AN ERROR!&quot;, :red
   #+end_src

   Colour symbols are defined in
   https://github.com/erikhuda/thor/blob/master/lib/thor/shell/color.rb


   #+begin_src ruby
     # Set color by using a string or one of the defined constants. If a third
     # option is set to true, it also adds bold to the string. This is based
     # on Highline implementation and it automatically appends CLEAR to the end
     # of the returned String.
     #
     # Pass foreground, background and bold options to this method as
     # symbols.
     #
     # Example:
     #
     #   set_color &quot;Hi!&quot;, :red, :on_white, :bold
     #
     # The available colors are:
     #
     #   :bold
     #   :black
     #   :red
     #   :green
     #   :yellow
     #   :blue
     #   :magenta
     #   :cyan
     #   :white
     #   :on_black
     #   :on_red
     #   :on_green
     #   :on_yellow
     #   :on_blue
     #   :on_magenta
     #   :on_cyan
     #   :on_white

   #+end_src
</content>
      <author>
        <name>Tamara Temple</name>
        <email>tamara@tamouse.org</email>
      </author>
    </entry>
    <entry>
      <id>https://github.com/tamouse/swaac/blob/master/posts/Tech/provisioning-new-mac.org</id>
      <updated>2022-03-18T12:32:18-05:00</updated>
      <title>Provisioning a new Mac</title>
      <content>* Provisioning a new Mac

*KEY POINT:* the &quot;you&quot; in this writeup is me, the author. If you, the reader, are not me, the author, then you /have to modify to fit your own needs/.

** Admin Privs

If this is your own mac, your account should be created with Administrator privs, and you should be able to install software, do things like run ~sudo~, and all sorts of wonderful things, usually all you need to do is provide your account password when asked.

** Set default shell

This is optional, and it&#39;s probably high time to move to zsh, which is the default on new macs since 10.15. If you do want to set the default shell, this will do that.

#+BEGIN_SRC shell
chsh -s /bin/bash
#+END_SRC

** Modify Terminal to close window on exit

You should do this for all the terminal profiles you use. Also, this is a good time to modify colours so you can read them (e.g. red text on red sands sucks).

** Set alternate destination for screenshots

#+BEGIN_SRC shell
mkdir $HOME/Downloads/Screenshots
defaults write com.apple.screencapture location $HOME/Downloads/Screenshots
killall SystemUIServer
#+END_SRC

Using `$HOME/tmp/` might be good, too.

** Display Useful Info in Finder

#+BEGIN_SRC shell
defaults write com.apple.finder ShowPathbar -bool true
defaults write com.apple.finder ShowStatusBar -bool true
#+END_SRC

** Installing Keybase

This stores other credentials for the project, my org files, etc.

1. Go to [[https://keybase.io]] and log in
2. Download the app for the mac from that page
3. Open up the ~dmg~ and follow the prompts to install it
4. Launch the app /Applications/Keybase.app
5. Log in to your keybase account
6. Follow the prompts on the new machine and an old machine you selected to verify the new machine&#39;s identity
7. Log out and log in as the WA admin in the case of the work machine :P
8. Go to the file tab in keybase.app, and install the Finder extension
9. Log out of the WA account and back into the user (use the username instead of real name, i guess...)
10. Go the the file tab in Keybase.app again, open the Finder and see that you have access
11. Go to a new Terminal window, and run ~keybase help~ to make sure the command line works, too

** Other Privs

*** typical areas to find other credentials

- .aws/
- .gnupg/
- .netrc
- .ssh/

*** Keybase-based: getting your creds

The beauty of Keybase is that you can keep credentials and other secrets in the file system for your private use.

The pain is keeping them sync&#39;d.

I have the above directories sync&#39;d to my private keybase folder.

**** saving updating creds to keybase

*NOTE: make sure the directroeis you are copying do NOT have the / at the end!*

#+BEGIN_SRC shell-script
  rsync -av ~/.aws \
	~/.gnupg \
	~/.ssh \
	~/.netrc \
	/Volumes/Keybase/private/tamouse_/creds/
#+END_SRC

**** getting the cred to the new machine

(or just updating them)

#+BEGIN_SRC shell-script
  rsync -av /Volumes/Keybase/private/tamouse_/creds/ $HOME
#+END_SRC

** Install X-Code

This takes a brutally long time, since it&#39;s just such a ginormous download (8G?)

*** Install the dev toola

#+BEGIN_SRC shell-script
$ xcode-select --install
#+END_SRC

** Install homebrew (brew.sh)

Go out to the [[https://brew.sh][homebrew web page]], there&#39;s a command you can paste into a Terminal window. At some point, it should ask for your password; give it and then brew will be able to raise its privs when needed. The last time I did this, I ended up not being able to type at the Terminal. Swiftly just solved by quitting Terminal and restarting it. Run ~brew doctor~ to make sure everything is cromulent.

Install the newest version of git; the one on mac install is likely too old for development purposes:

~brew install git~

** Download config repos

Since the .ssh creds were copied over in a previous step, this step should be pretty easy.

Remember these are /my configs/; if you are not me, use your own, please.

*** Dot Files

1. clone the dot files repo first: ~git clone git@github.com:tamouse/my-dot-files.git .my-dot-files~
2. move into the new dir: ~pushd .my-dot-files~
3. poke around in the ~profile.d~ folder and make sure all the ones you want are marked as executable
4. in the ~.my-dot-files/~ folder, run ~./setup.sh~ which will set up the links to the various profile and rc files.
5. close the Terminal.app and repen it, the setup stuff should be working. Try it out by typing ~ll~ at the Terminal.

*** Emacs config

1. make sure you&#39;re in the HOME directory again: ~cd~
2. clone the emacs config: ~gcl git@github.com:tamouse/my-emacs-d.git .emacs.d~
3. follow the directions in the README

** Essential Software
*** Installing Emacs

For me, there is next to nothing that is more important that using my imprinted editor. It&#39;s easier than ever these days, too, being able to install as a cask from home brew.

I ran the following to check on stuff: ~brew cask info emacs~ -- in particular, I want a fairly high level version, which might not be completely released. I&#39;m running 26.2, the latest from the command shows 26.3, so it should be good to go.

1. run ~brew install --cask emacs~
2. start up emacs with just ~emacs~ to make sure the init.el works as hoped.

   1. on this latest install, i needed to modify init.el
   2. it was making a reference to ~/usr/local/share/emacs/~ which did not exist in this particular install from the home brew cask.
3. test out the ~emacsclient~ aliases:
   
        ecn .


Hopefully everything goes smoothly.

*** Installing Ruby(ies?)

1. Grab ~ruby-install~: ~brew install ruby-install~
2. Get the latest ruby versions: ~ruby-install~
3. Install your sweet version: ~ruby-install ruby 2.5.7~ for the project I&#39;m working for this work computer, others are good, too!
4. Grab ~chruby~: ~brew install chruby~
5. Close and reopen the Terminal
6. Run ~chruby~ to verify the ruby you just installed is there
7. For my work machine, I want to always be using the same version of ruby everywhere, so I create a ~.ruby-version~ file with ~ruby-2.5.7~ in it
8. Close and reopen the Terminal again
9. Verify the ruby:
   - ~chruby~ - should show the ruby version you added to the ~.ruby-version~ file
   - ~which ruby~ - should show the new ruby version under your ~.rubies/~ directory
   - ~ruby -v~ - shows the right version of ruby, yay!
10. Install some necessary global gems:
    - bundler - match the version your project(s) need, 2.0.3
    - rake - the version installed with ruby might be okay
    - rails 5.1.6 (or whatever your project uses) (takes a long time, whee)

*** Installing Node, NPM, and friends

**** Using nvm

Head over here, and do as it says &lt;https://github.com/nvm-sh/nvm#install--update-script&gt; to install `nvm`.

Installing the latest Long Term Support node, use

```
nvm install --lts
command -v node
node -v
npm -v
npx -v
```

**** If not using nvm.

We&#39;ll be installing from the nodejs web site, instead of using brew or nvm. 

1. Point the browser at [[https:///nodejs.org/en/]]
2. Click on the LTS version to download the installer
3. Launch the installer, click through confirming everythingss, and it should be good to go.
4. Close and reopen the Terminal, just for good time sake
5. Verify ~node~
   - ~node -v~
   - ~npm -v~
   - ~npx -v~

or do install with brew.  

Install ~yarn~: ~brew install yarn~ (beware there is a new way to do this for yarn v2!)

** Other Software

1. Chrome 
2. Firefox
3. 1Password &lt;https://1password.com/&gt; web, desktop, browser, etc...
4. Amphetimine [AS]
5. Spark [AS]
6. Notion &lt;https://www.notion.so/desktop&gt;
7. Slack [AS]
9. Zoom &lt;https://us04web.zoom.us/download#client_4meeting&gt;
10. Affinity Photo &amp; Design [AS]
11. Spotify &lt;https://www.spotify.com/us/download/mac/&gt;
12. Sonos, &lt;https://support.sonos.com/s/downloads?language=en_US&gt;
13. Monosnap [AS]
14. --Spectacle-- use Rectangle instead: https://github.com/rxhanson/Rectangle
15. Alfred &lt;https://www.alfredapp.com/&gt;
16. Discord &lt;https://discord.com/download&gt;
17. Display Menu [AS]
18. JetBrains Toolbox (from which you can install the others) &lt;https://www.jetbrains.com/toolbox-app/&gt;
19. Kindle for Mac
20. ... this list will grow and shrink :D

** org files

I keep my org files on keybase in git

#+BEGIN_SRC shell
  git clone keybase://private/tamouse_/org-files ~/org
#+END_SRC

** Postgresql

#+BEGIN_SRC shell
  brew install postgresql
  brew services start postgresql
  createdb tamara
#+END_SRC

For other versions run ~brew search postgresql~. you should be able to run different versions of it, but you&#39;ll also need different paths for the data and so on.

** redis

For a lot of work projects, I use redis on the app. It&#39;s generally useful, like PG, so I make sure it&#39;s always available.

#+BEGIN_SRC shell
  brew info redis
  brew install redis
  brew services start redis
#+END_SRC


</content>
      <author>
        <name>Tamara Temple</name>
        <email>tamara@tamouse.org</email>
      </author>
    </entry>
    <entry>
      <id>https://github.com/tamouse/swaac/blob/master/posts/2022/2022-02-19-how-to-access-icloud-files-from-the-command-line.md</id>
      <updated>2022-03-18T12:32:18-05:00</updated>
      <title>2022-02-19-how-to-access-icloud-files-from-the-command-line</title>
      <content>The file system holding iCloud files is sort of tucked out of the way. It would be nice if it were mounted under `/Volumes/` like others, but no.

According to this answer at &lt;https://discussions.apple.com/thread/7388762&gt;, you can find it under `$HOME/Library/Mobile\ Documents/com~apple~CloudDocs`.
In case that&#39;s not very readable, those are *tildes* at the end (shift-backtick, close to the number 1 key). I&#39;ll embiggen it:

# `$HOME/Library/Mobile\ Documents/com~apple~CloudDocs`

What I did, now that I know that&#39;s where they live, is create a soft link to that directory in my `$HOME` directory:

     $ link -s $HOME/Library/Mobile\ Documents/com~apple~CloudDocs iCloud

and that let me have easy access without having to remember that long path.

</content>
      <author>
        <name>Tamara Temple</name>
        <email>tamara@tamouse.org</email>
      </author>
    </entry>
    <entry>
      <id>https://github.com/tamouse/swaac/blob/master/posts/2021/2021-12-23-til-how-to-use-low-data-mode-in-ios.md</id>
      <updated>2022-03-18T12:32:18-05:00</updated>
      <title>2021-12-23-til-how-to-use-low-data-mode-in-ios</title>
      <content># Use Low Data Mode on your iPhone and iPad - Apple Support

&lt;pre&gt;
Archived?: No
Area: Maintenance
Blogged?: No
Created: December 23, 2021 2:00 PM
Processed?: No
Stale?: No
Status: Completed
Summary: Turn Low Data Mode on or off on IOS devices
Tags: iOS
Topic: Hardware
URL: https://support.apple.com/en-us/HT210596
What is important about this?: Remove annoying pop-up confirmation dialogs
Why did I save this?: I had it turned on and couldn’t figure out how to turn it back off
&lt;/pre&gt;

With iOS 13 and later, you can turn on Low Data Mode to restrict background network use and save cellular and Wi-Fi usage.

You might want to use Low Data Mode if your cellular or internet plan limits your data usage, or if you&#39;re in an area with slow data speeds.

## How to turn on Low Data Mode

You can turn on Low Data mode separately for cellular and Wi-Fi. Your Low Data Mode settings might vary depending on your carrier. Select the type of plan you have below and follow the steps.

### LTE/4G Cellular

1. Go to Settings and tap Cellular
2. Tap Cellular Data Options, then turn on Low Data Mode.

### 5G Cellular

1. Go to Settings and tap Cellular.
2. Tap Cellular Data Options, select Data Mode, then turn on Low Data Mode.

### Dual SIM

1. Go to Settings and tap Cellular or Mobile Data.
2. Tap one of your numbers.
3. Turn on Low Data Mode.

### Wi-Fi

1. Go to Settings and tap Wi-Fi.
2. Tap the Info button next to the Wi-Fi network that you&#39;re connected to.
3. Turn on Low Data Mode.

Your Low Data Mode preferences for each Wi-Fi network are kept up to date across all your devices through iCloud.

## What to expect in Low Data Mode

Different apps use different ways of reducing data usage in Low Data Mode. In general, here&#39;s what you can expect:

- Apps might stop using network data when you&#39;re not actively using them.
- Background App Refresh is turned off.
- The quality of streaming content might be reduced.
- Automatic downloads and backups are turned off.
- Services such as iCloud Photos pause updates.

Built-in iOS apps and services adapt to Low Data Mode in the following ways:

- App Store: Video autoplay, automatic updates, and automatic downloads are turned off.
- Music: Automatic downloads and high quality streaming are turned off.
- Podcasts: The frequency of feed updates is limited, and episodes are downloaded only on Wi-Fi.
- News: Article prefetching is turned off.
- iCloud: Updates are paused, and automatic backups and iCloud Photos updates are turned off.
- FaceTime: Video bitrate is optimized for lower bandwidth.

## Learn more

- [Find out how much cellular data that you&#39;re using](https://support.apple.com/kb/HT201299), and learn how to turn cellular data on or off for all apps or individual apps.
- [Use Wi-Fi Assist](https://support.apple.com/kb/HT205296) to automatically switch to cellular when you have a poor Wi-Fi connection.
</content>
      <author>
        <name>Tamara Temple</name>
        <email>tamara@tamouse.org</email>
      </author>
    </entry>
    <entry>
      <id>https://github.com/tamouse/swaac/blob/master/posts/Tech/gdi-classes.org</id>
      <updated>2022-03-06T22:16:36-06:00</updated>
      <title>GDI</title>
      <content>* GDI
** Slack convos
*** Discussion in #random about job salaries
    CAPTURE_DATE: [2017-06-05 Mon 15:45]

    #+BEGIN_QUOTE

 OP [1 hour ago]
 Hey all, I have a question that I have been struggling with for a bit. I am currently working through a bootcamp for full stack development and would like to start getting organized for the job search. I am starting to watch job postings and some ask what my preferred salary would be. I spent many years as a national park ranger, which means low pay and no chance at negotiating starting pay either. I have tried to look around at what the starting pay would be for staying in the twin cities but find reports on average salaries of experienced developers. Does anyone have resources on this or advice on what to ask for and how much to negotiate? I just don&#39;t know what to even ask for as a salary aside from making sure it pays the bills. Feel free to DM too if you would prefer. THANKS!

 R1 [1 hour ago]
 @OP: 1st things 1st, never mention your previous salary. Especially since it doesn’t apply to your next role as a dev.

 R1 [1 hour ago]
 2nd things 2nd, take a look at glassdoor, linkedin, and indeed. heck even the gov websites with salary averages to start getting a range.

 R1 [1 hour ago]
 then think about your life, lifestyle, I came up with a minimum I am comfortable with and then I keep that to myself.

 R1 [1 hour ago]
 I ask for 10-20k higher, depending on the company

 R1 [1 hour ago]
 My one phrase of advice when it comes to this is “The worst thing they can say is no, and even if they say no, it’s probably a maybe” (edited)

 R1 [1 hour ago]
 Know what you’re bringing to the table, some people will try to use your bootcamp only experience as a negative against you, it’s not. It’s a positive. It speaks to your thirst to learn, ability to learn and adapt quickly, passion and so much more.

 R1 [1 hour ago]
 People often underestimate what it means to basically change your whole life overnight when it comes to deciding to go to a bootcamp

 R1 [1 hour ago]
 anyways rant over… That’s my advice!

 R1 [1 hour ago]
 I bet @R5 has great advice on this as well

 OP [1 hour ago]
 thanks! that helps get me started

 R1 [1 hour ago]
 anytime. Congrats on getting ready to get out there!!

 R2 [1 hour ago]
 Yes yes yes. I second everything @R1 just mentioned. @R5 brought up the “never mention your previous salary” comment the other day. This is so key. Keep in mind that when a company posts a job, they already have a budget in mind. Let them share that first!

 R2 [1 hour ago]
 Not everyone will do that, and some might be cranky if you stay firm (this just happened to me) but it’s definitely worth a try.

 R2 [1 hour ago]
 We had a negotiating GDI workshop about a year ago that I found so valuable. Go in to the discussion with three numbers in your mind: the number that would just blow your socks off and make you crazy happy, a number that seems fair, reasonable and makes you excited, and a minimum number that you are willing to walk away from if they don’t meet. Keep these to yourself, but start with your high in the sky number and go from there :slightly_smiling_face:

 R3 [1 hour ago]
 Sometimes a company will ask you also what you used to make. When they ask me what I was making at my last job, I always lie and tell them a number that I&#39;m actually targeting to make at this new position. A lot of jobs will make an offer so close to your last salary that saying a number you&#39;re wanting will put you in a negotiating range where you can say, &quot;Well, I was actually looking to make more than at my last position.&quot;

 R4 [1 hour ago]
 Negotiating tactics apply to salary negotiation as much as they do to other negotiable situations (car buying, flea markets, etc), so if you want to psych yourself up with some general negotiation strategies from across the Internet as well, that can&#39;t hurt. (edited)

 R3 [44 minutes ago]
 Also, keep yourself open to possible company perks, maybe you&#39;d take less $$ if you have more vacation, or work from home days, or really amazing health insurance. It&#39;s not just about salary negotiation. The biggest thing people don&#39;t negotiate for more is vacation, and sometimes can be the easiest to get.


 R4 [39 minutes ago]
 Agreed that the salary number isn&#39;t everything - we hear a lot about &quot;company culture&quot; these days, and a lot of what companies tout as their &quot;culture&quot; is meaningless, so diving into that can also net you a bomb place to work that helps your mental health and personal fulfilment even if it doesn&#39;t pay Google money. Awesome on-site skill-building opportunities? Plenty of experienced people who enjoy mentoring and have helpful attitudes? Tangible, clear, supported diversity initiatives? Strong community/charitable ties? What kinds of &quot;culture&quot; things matter to you?

 R1 [28 minutes ago]
 Agreed. I would work at a place that covers my insurances, and offers more PTO, conference stipends, etc, if the salary is lower because I find those kinds of things very valuable.

 R1 [28 minutes ago]
 Definitely make sure culturally it is a fit for you too. Ask to meet the team before you make any final decisions

 R5
 [15 minutes ago]
 @R1 I really have nothing to add. Dang, write a book!!


 R1 [14 minutes ago]
 hahaha. I’ve heard that before

 R1 [14 minutes ago]
 Maybe i should :thinking_face:


 R2 [14 minutes ago]
 Yes, please!

 R5
 [13 minutes ago]
 Oh, i guess i do have an additional piece of advice: do *not* refer to yourself as a “Junior Developer” (or “junior” anything). Certainly, you don’t the time/experience/etc BUT you do have skills they can use today, and you should have the ability to learn things, but most of all, solve problems


 R5
 [12 minutes ago]
 no one actually knows what the difference between a jr dev and sr dev actually is; it it most certainly not number of years, although that’s often the only thing people think of.

 R2 [12 minutes ago]
 @__ might have something to add, too. I know HackReactor has a lot of opinions on this.

 R5
 [11 minutes ago]
 I might be getting a bit subversive here, but the skills ppl look for in sr people is the ability to be self-directed, take initiative, and most of be able to solve problems

 R2 [10 minutes ago]
 Ha. What makes you “senior” is a whole other giant discussion that I woudl love to have.

 R5
 [10 minutes ago]
 you can most definitely have those; it’s not number of years. sure, someone like me, i’ve just made a huge huge pile of mistakes to learn from, but there’s a lot of sr people who do not bother to learn

 R5
 [10 minutes ago]
 it’s a false label  /  dichotomy

 R5
 [9 minutes ago]
 but it’s one that is so entrenched it’s hard to deal with. so again, do not put that label on yourself

 R5
 [9 minutes ago]
 we need to have another meetup this week so we can have all these great conversations LOL


 R2 [9 minutes ago]
 yep yep yep - hard when that’s often tied to salary, recognition, opportunities, responsibility, etc.

 R1 [9 minutes ago]
 do it!

 R2 [8 minutes ago]
 RIGHT?!

 R1 [8 minutes ago]
 that’s a conversation i would love to be a part of

    #+END_QUOTE



*** Discussion on GDIMPLS Slack
    CAPTURE_DATE: [2017-03-06 Mon 16:17]
    TOPIC:    Y U No Hire Jr Devs?

    OP started off a discussion in the #general chat in
    GDIMpls.slack.com team.

    #+BEGIN_QUOTE
    OP [Today at 1:51 PM]
    question for everybody: have you ever worked at a place that “doesn’t hire jr devs”, spoken to a place/person that “doesn’t hire jr devs”, or do you personally not like jr devs (i won’t be hurt/offended)?

    R1 [1 hour ago]
    so, personally, you gotta know i love jr. devs, otherwise i wouldn&#39;t be trying to help make some :slightly_smiling_face:

    OP [1 hour ago]
    true true

    R1 [1 hour ago]
    but the &quot;we don&#39;t hire jr. devs&quot; is so fucking real

    R1 [1 hour ago]
    i have long convos with recruiters and companies about this alla time. The problem, and I think know it, is that when everyone is hiring sr. devs, that means no one is creating new sr. devs, and you have to hire jr. devs to make sr. devs

    R1 [1 hour ago]
    sorry, I think *everyone* knows it

    R1 [1 hour ago]
    (thinking too fast to type)

    R2 [1 hour ago]
    Yep not many people are willing to put the time in to make the senior devs they truly want by training jr devs.

    R1 [1 hour ago]
    and yet the complaint is that they can&#39;t afford to train jr. devs

    R1 [1 hour ago]
    the typical mindset for tech companies is that they don&#39;t have the time, can&#39;t take the risk, and so on, because they don&#39;t fundamentally understand what they&#39;re trying to make

    R2 [1 hour ago]
    Yep

    R1 [1 hour ago]
    there&#39;s a tremendous lack of mindfulness about developing software, in pretty much any form

    R1 [1 hour ago]
    a lot of this is historical, of course, but that really doesn&#39;t excuse the lack of introspection about what the software industry is

    OP [1 hour ago]
    this is great! I hadn’t thought about that.

    R1 [1 hour ago]
    this also ties into the latest very visible reports of misogyny, we&#39;ve seen, but cuts across all the -isms; where you do not see diversity happening, just talked about and much handwringing

    R1 [1 hour ago]
    you notice women, poc, pwd, etc., when they get someplace primarily because it is so fucking rare

    OP [1 hour ago]
    Diversity &amp; Inclusion -Buzzwords of 2016/17

    R1 [1 hour ago]
    sadly, just buzzwords

    OP [1 hour ago]
    EXACTLY

    R1 [1 hour ago]
    fill out your bingo card!


    R1 [1 hour ago]
    this is not new; i don&#39;t see it changing, i see it getting more lip service, and no real change

    R1 [1 hour ago]
    i don&#39;t think it&#39;s any better

    R1 [1 hour ago]
    and this pisses me off to no end

    R2 [1 hour ago]
    This really has my mind running now. Why arent more companies open to jr devs? Seriously, they have the skills to learn, they have the want, and they require less compensation, why not let them work on your smaller projects until they are your senior dev you want. (edited)

    R1 [1 hour ago]
    and even more, how i have been unable to make and change, and how i&#39;ve been totally complicite

    R1 [1 hour ago]
    i had a phone intreview this morning, and we talked about exactly that, R2

    R2 [45 minutes ago]
    Train the senior devs you want. Why is that so hard?!

    R1 [45 minutes ago]
    how this company *had* hired a bunch of jr. devs, but they had no direction, and no idea of what they should be doing

    R2 [44 minutes ago]
    Yeah thats the opposite problem

    R2 [44 minutes ago]
    they need a leader that wants to and is a good mentor too


    R1 [44 minutes ago]
    and so now they&#39;re looking at getting more sr. people to help with that

    R2 [44 minutes ago]
    Thats good

    R1 [44 minutes ago]
    it&#39;s just another huge example of mindlessness

    R2 [44 minutes ago]
    Yep

    R2 [44 minutes ago]
    Lack of proper planning

    R1 [43 minutes ago]
    what i would love to do, most of all, is help jr. devs become sr. devs


    R1 [43 minutes ago]
    the companies that do hire jr. devs, then proceed to never give them any guidance.

    OP [43 minutes ago]
    I’m interested in why you feel you’ve been complicit @R1

    R2 [42 minutes ago]
    Me too Tamara.

    R2 [42 minutes ago]
    I wish there was a sustainable way to do that. My only idea was winning the lottery so money wasnt a concern, hahaha.

    R1 [41 minutes ago]
    because i fall prey to the same thinking that everyone else does; we had this long convo this weekend at lunch about diversity as it relates to women in tech, and NOT ONCE did anyone, including myself, ever mention the intersectionalities

    R1 [41 minutes ago]
    not. once.

    R3 [41 minutes ago]
    &quot;the companies that do hire jr. devs, then proceed to never give them any guidance.&quot; &lt;-- this is super interesting. (i mean all of this is)

    R1 [40 minutes ago]
    my blue sky pipe dream is that we can open a coop / collective, that isn&#39;t a for profit, and people who participate also have to give back in time and resources

    R3 [40 minutes ago]
    I think that might be part of the hesitation for many. They may want to do it _right_ and convince themselves they don&#39;t have the bandwidth to take on an individual that will need guidance/mentoring/support.

    R1 [40 minutes ago]
    Do understand I am way overgeneralising that

    R2 [40 minutes ago]
    Agreed. I think that is a lot of it. It seems to overwhelming so they just avoid it.

    R3 [40 minutes ago]
    We did this at W______, _very_ intentionally this past year.

    R3 [40 minutes ago]
    Our goal was to hire a &quot;junior&quot; dev

    R1 [40 minutes ago]
    some place have done that, some places do do that

    R2 [39 minutes ago]
    Your pipe dream sounds great R1.

    R3 [38 minutes ago]
    Companies want to make money, and as we discussed at lunch this weekend, assembling and creating a safe place for a diverse team will always create a higher quality product.

    R1 [38 minutes ago]
    what i heard talking with LP last week and this, is an interesting model of organization. A team is 5 people, a lead dev, two jr or other devs, a product mgr, and a UI/UX &quot;specialist&quot; (their term, could be a dev, dunno for sure yet)

    R3 [38 minutes ago]
    I wonder if people don&#39;t actualy believe that, or if they just don&#39;t know how to get there

    R1 [38 minutes ago]
    it&#39;s an interesting model

    R1 [38 minutes ago]
    i think the latter, R3

    R1 [37 minutes ago]
    don&#39;t know, don&#39;t know how to find out, and that&#39;s a huge risk to take

    R3 [37 minutes ago]
    Mhm

    R2 [37 minutes ago]
    That is the perfect team mix, R1, in my mind.

    R1 [37 minutes ago]
    mine to; i hope it&#39;s not just words

    R1 [37 minutes ago]
    i&#39;ve pretty much decided i&#39;ll take their offer if they make one

    R1 [37 minutes ago]
    pls don&#39;t tell

    R2 [36 minutes ago]
    Oh thats super great. So would you be one of those senior devs helping mentor the jr&#39;s?

    R1 [36 minutes ago]
    yeah

    R2 [36 minutes ago]
    My boss mentioned getting a junior &quot;me&quot; (my role, not me specifically) and I was so excited. Mentoring is one of my fave things to do.

    R1 [36 minutes ago]
    i mean, we were all speaking the same language, right? so now all my red flags are flying....

    OP [36 minutes ago]
    this is all really good stuff. And I know that the 3 of you (and more) do want to create that space for those like myself. It’s just really disheartening to be told because I’m a jr dev, I can’t add value

    R1 [35 minutes ago]
    AND THAT IS SO WRONG

    R1 [35 minutes ago]
    IT IS A LIE

    OP [35 minutes ago]
    I KNOW!

    R1 [35 minutes ago]
    spoken by people who are not adding value

    R2 [35 minutes ago]
    That is so horrible. You are amazing and I know you will not let it get you down, but make sure that you do not take that to heart or find it discouraging. (edited)

    OP [35 minutes ago]
    I want to learn the way a company codes, their standards, structure, i want to fix all the little things nobody else does, I want to build shit.


    R2 [34 minutes ago]
    You can add TONS of value.

    OP [34 minutes ago]
    Thank you.

    OP [34 minutes ago]
    It just adds more fuel to an already huge fire

    R2 [34 minutes ago]
    :fire:

    R1 [34 minutes ago]
    i&#39;m not really joking when i say &quot;burn it all down&quot;

    R2 [33 minutes ago]
    You are a strong person, it makes me sad for the people that are less like you. (edited)

    R2 [33 minutes ago]
    The ones that wont have that fight in them and will give up and move on.


    R1 [33 minutes ago]
    but this is also back to relying superheroism to make things better


    OP [32 minutes ago]
    right. That’s another reason why I want to do this at Minnebar

    OP [32 minutes ago]
    because I know that there are so many people that just won’t say anything

    R1 [31 minutes ago]
    you mean have this conversation at Minnebar?

    OP [30 minutes ago]
    yeah, i’m writing up a session called “So you don’t hire Jr Devs? Tell me more.&quot;


    R1 [29 minutes ago]
    oh fuck yeah

    OP [29 minutes ago]
    to speak as a jr dev, how jr devs feel in the market, what can other devs do to support and advocate and our importance

    OP [29 minutes ago]
    and then Lanice and I are also writing up one on Diversity &amp; Inclusion

    R1 [28 minutes ago]
    without jr devs there is no future software business


    R2 [28 minutes ago]
    OMG I am sad, I will miss that.

    R2 [28 minutes ago]
    I will be speaking at WordCamp in San Diego.

    R2 [28 minutes ago]
    Please definitely do that - the world needs to hear it.

    OP [27 minutes ago]
    I am sad you’re missing it too!!

    R1 [26 minutes ago]
    tickets are all gone

    R1 [25 minutes ago]
    also, i hate super large people events

    R1 [24 minutes ago]
    so that&#39;s an example of me being complicit

    R1 [23 minutes ago]
    so, like, what i should say instead, is there anything i can help with?

    R3 [23 minutes ago]
    ^^^^^^^^^^^

    R3 [23 minutes ago]
    that

    R3 [23 minutes ago]
    haha

    R3 [22 minutes ago]
    ditto

    R1 [21 minutes ago]
    &quot;The master&#39;s tools will never dismantle the master&#39;s house&quot; so we make our own tools

    R4 [18 minutes ago]
    This thread just got me really emotional. Thanks to everyone who&#39;s been sharing thoughts and perspectives. As a current junior dev who struggled to find a job and heard from companies that they don&#39;t hire jr, it got really challenging.


    R1 [17 minutes ago]
    This topic is hugely emotional for me as well, cari.tan, it goes into a lot of other things for me as well.

    R1 [16 minutes ago]
    primarily, i think our failing as sr. devs, mgrs, and so on, i.e., the people that *could* change things, is we just do not become or stay mindful

    R4 [16 minutes ago]
    One of the things that I kept thinking about was how if you hire junior devs, then they are coming in and learning your systems, your procedures and it might in someways be easier to integrate into the company processes because they are not bringing in past habits, which might be good and bad.


    R1 [15 minutes ago]
    EXACTLY!! and you&#39;ll have more effective devs than if you wait for the perfect sr. dev to show up

    R1 [14 minutes ago]
    AND! those jr. devs need guidance, attention, (care &amp; feeding?)


    R4 [14 minutes ago]
    I&#39;m currently on a team that doesn&#39;t have any real support for me because I&#39;m the only one working in the area that I work in and I have to go outside of my team when I&#39;m stuck, which can be challenging because of the schedules and workloads of their teams. It gets really hard sometimes.

    R1 [13 minutes ago]
    does you management listen to such issues well?

    R1 [12 minutes ago]
    (i was trying to figure out a way to ask in such a way as to not make any assumptions, but i don&#39;t think i can)

    R4 [12 minutes ago]
    Not really. I&#39;m on contract, which adds some complications. It

    R1 [11 minutes ago]
    certainly

    R1 [10 minutes ago]
    this is another place i have a huge advantage as a sr. dev, even, or especially, on contract, i don&#39;t usually have any hesitations in telling management their organization / communication / processes are not working well

    R4 [10 minutes ago]
    It&#39;s largely due to a restructuring that happened right after I started. I was hired onto a team of six people who all worked on the same parts of the website and then about 3 weeks later we were split across three new teams. I was the only one from the original team that ended up on mine. They are aware, but there&#39;s no real motivation for them to do much about it (add or shift resources, etc).

    R1 [9 minutes ago]
    but it&#39;s not something that a jr. can do with credibility :disappointed:

    R4 [8 minutes ago]
    Yeah, exactly.

    R1 [8 minutes ago]
    start looking for your next contract, maybe


    OP [8 minutes ago]
    i agree.

    R1 [7 minutes ago]
    because, holy cow, fixing their shit is not on you

    R1 [6 minutes ago]
    of course, the other side is get the learning you can out of the current situation

    R1 [5 minutes ago]
    idk, folks, this whole system is not going to solved by waiting for companies to wake up

    R4 [4 minutes ago]
    I have started looking for the next thing. I&#39;ve learned quite a bit, but am definitely ready for something different with more support.

    R1 [4 minutes ago]
    and as much fun as it would be for me to train jr. devs into sr. devs, i also don&#39;t want to just create a chain of cannon fodder

    R1 [3 minutes ago]
    cari.tan : awesome!!

    R4 [3 minutes ago]
    Thanks @OP for starting this conversation. It needs to be talked about and revisited often.

    R1 [3 minutes ago]
    :+1:

    R1 [2 minutes ago]
    i sure want to hear from you all on this

    R1 [2 minutes ago]
    and i am quite serious about the offers of help


    OP [1 minute ago]
    Thank you ALL for contributing. I am glad to know that sr/mid/lead devs care about this

    R4 [1 minute ago]
    Thanks @R1, @R3 and @R2 for being in leadership and senior roles and sharing your perspective and helping to work on this issue!
    #+END_QUOTE

</content>
      <author>
        <name>Tamara Temple</name>
        <email>tamara@tamouse.org</email>
      </author>
    </entry>
    <entry>
      <id>https://github.com/tamouse/swaac/blob/master/posts/Tech/ruby-notes.org</id>
      <updated>2022-03-06T22:16:36-06:00</updated>
      <title>Ruby</title>
      <content>* Ruby

** Notes
*** [[http://www.saturnflyer.com/blog/jim/2015/01/20/ruby-forwardable-deep-dive/?utm_source%3Drubyweekly&amp;utm_medium%3Demail][Forwardable Deep Dive]] [2015-01-25 Sun]
    :PROPERTIES:
    :LOCATION: added to swaac.dev
    :END:
    #+AUTHOR: Jim Gay



*** TODO try out moneta in an application

** Books

*** Practical Object Oriented Design in Rails - Sandi Metz

***** On composition vs inheritance, Sandi Metz in POODR
   #+begin_src markdown
     &gt; Composition allows you to combine small parts to create more complex
     &gt; objects such that the whole becomes more than the sum of its
     &gt; parts. Composed objects tend to consist of simple, discrete entities
     &gt; that can easily be rearranged into new combinations. These simple
     &gt; objects are easy to understand, reuse, and test, but because they
     &gt; combine into a more complicated whole, the operation of the bigger
     &gt; application may not be as easy to understand as that of the
     &gt; individual parts.


     &gt; Composition, classical inheritance, and behavior sharing via modules
     &gt; are competing techniques for arranging code. Each has different
     &gt; costs and benefits; these differences predispose them to be better
     &gt; at solving slightly different problems.


     &gt; These techniques are tools, nothing more, and you’ll become a better
     &gt; designer if you practice each of them. Learning to use them properly
     &gt; is a matter of experience and judgment, and one of the best ways to
     &gt; gain experience is to learn from your own mistakes. The key to
     &gt; improving your design skills is to attempt these techniques, accept
     &gt; your errors cheerfully, remain detached from past design decisions,
     &gt; and refactor mercilessly.

     &gt; As you gain experience, you’ll get better at choosing the correct
     &gt; technique the first time, your applications will improve.”


     Excerpt From: Metz, Sandi. “Practical Object-Oriented Design in Ruby:
     An Agile Primer (Addison-Wesley Professional Ruby Series).”
     iBooks. https://itunes.apple.com/WebObjects/MZStore.woa/wa/viewBook?id=038BE4A901A3E1659EA914B97D73CA82

   #+end_src

*** The Well Grounded Rubyist

     #+begin_src markdown
       ## Who should read this book

       &gt; The Well-Grounded Rubyist, Second Edition is optimized for a reader
       &gt; who’s done some programming and perhaps even some Ruby and wants to
       &gt; learn more about the Ruby language—not only the specific techniques
       &gt; (although the book includes plenty of those), but also the design
       &gt; principles that make Ruby what it is. I’m a great believer in knowing
       &gt; what you’re doing. I also believe that knowing what you’re doing
       &gt; doesn’t mean you have to compose a treatise in your head every time
       &gt; you write a line of code; it means you know how to make the most out
       &gt; of the language, and understand how to analyze problems when they
       &gt; arise.
       &gt;
       &gt;
       &gt; [I]f this is your first foray into programming, be prepared to do a
       &gt; little extra self-imposed “homework” to get ramped up into the
       &gt; programming process—but by all means, give The Well-Grounded Rubyist,
       &gt; Second Edition a go. The book isn’t specifically an introduction to
       &gt; programming, but it does take you through all the practicalities,
       &gt; including the creation and running of program files, as well as
       &gt; explaining Ruby from the ground up

       Excerpt From: David A. Black. “The Well-Grounded Rubyist, Second
       Edition.”

     #+end_src


** Ruby one-liners
  #+name: one-liners
  #+begin_src ruby
    a=[1,2,3,4,4,5,6,6,6];Hash[a.group_by {|e| e}.map {|k,v| next if v.size ==1;[k,v.size]}.compact]
  #+end_src

** Ruby Testing
*** Capybara
**** DONE Scrolling the window in Capybara          :blog:ruby:spec:capybara:
   :PROPERTIES:
   :CAPTURE_DATE: [2019-03-06 Wed 16:45]
   :LOCATION: added to swaac.dev
   :END:


   This is a problem when we have a modal that is long and we need to get the &quot;Submit&quot; button.

   #+BEGIN_SRC ruby
     page.execute_script &quot;window.scrollBy(0,10000)&quot;
   #+END_SRC



** Ruby Meetings, Meetups
*** RubyMN 2014-02-24 7:00pm

**** AI Twitter Bot
***** Horse_Ebooks
***** rkelly_ebooks
      tweet rkelly lyrics
****** scrape
****** choose
****** vote
******* characterize
******* tag
******* bayes
******** classifier
******** guess funniness
******** human in the loop
******* post

***** what did we learn

****** try new things

****** make stupid shit

****** have some fun

****** josh kaplan
       @jkap
       git.io/rkelly_ebooks
       @rkelly_ebooks

**** Daemons in Ruby
     Ian Whitney @ianwhitney

***** what&#39;s a daemon?
****** Background jobs
******* resque
******* delayed jobs
******* sidekiq
****** Services
****** Responsive to changes


***** what else?
****** write your own
******* logging
******* error capturing
******* scheduling
****** daemon_kit
       https://github.com/kennethkalmer/daemon-kit


*** RubyMN Meeting 7:00pm-9:00pm
    &lt;%%(diary-float t 1 -1)&gt;
    Last Monday of the month

** RUBY REFILE TARGET
</content>
      <author>
        <name>Tamara Temple</name>
        <email>tamara@tamouse.org</email>
      </author>
    </entry>
</feed>
