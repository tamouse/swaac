
*WARNING: This is old and likely obsolete.*


* TIL: Dealing with a jest ~import~ SyntaxError

- Time-stamp: <2020-03-23 05:09:10 tamara>
- capture-date: [2019-01-03 Thu]
- keywords: jest, import, SyntaxError, transformIgnorePatterns

Today, I kept getting an error while running jest tests from within a module down in ~/node_modules/~:

#+BEGIN_SRC code
  ‚óè Test suite failed to run

    /Users/tamara/Work/master/kickserv/node_modules/promise-polyfill/src/polyfill.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,global,jest){import Promise from './index';
                                                                                             ^^^^^^

    SyntaxError: Unexpected token import
#+END_SRC

I tried numerous options, but finally landed on this: [[https://github.com/facebook/jest/issues/3202#issuecomment-387899346][Comment from @Izhaki]] describing their use of jest's ~transformIgnorePatterns~ setting. It turns out, all that was required was to actually *remove* the promise-polyfill npm module from the ignore patterns:

#+name: package.json
#+begin_src rjsx
  {
      "jest": {
          "transformIgnorePatterns": [
              "node_modules/(?!(promise-polyfill)/)"
          ]
      }
  }
#+end_src

The funky expresson, ~"node_modules/(?!(promise-polyfill)/)"~ is indicating that the matching path should *not* be ignored, and be transpiled by jest.

The other options in that comment thread and other places were about changing the `.babelrc` file and specifying different ~NODE_ENV~ values, which I just could not make work. With this setting, the jest tests all run, and the promise polyfill works in the code running in the browser.
