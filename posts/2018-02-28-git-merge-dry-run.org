* Git Merge "dry run"
  :PROPERTIES:
  :CUSTOM_ID: git-merge-dry-run
  :PUBLISHED_DATE: 2018-02-28T10:30
  :KEYWORDS: git, merge, dry run, tools
  :END:

- date: 2018-02-28 10:30
- keywords: git, merge, dry run, tools

There's no specific thing called a "dry run merge" with git, but it's simple enough to simulate.

In the sample below, =BRANCH= is being merged *into* =TARGET=.

#+BEGIN_SRC sh
    git checkout $TARGET
    git merge --no-commit --no-ff $BRANCH
    git diff --cached
    git merge --abort
#+END_SRC

You can look for any potential merge conflicts after the first command as well and see what you might be up against.

Note you need /both/ the =--no-commit= /AND/ =--no-ff= flags to prevent the merge from occurring if it's possible for a fast-forward merge to occur (likely).
