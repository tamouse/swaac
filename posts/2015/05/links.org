* Useful Links

*WARNING: This is old and likely obsolete.*



- Time-stamp: <2020-03-23 04:39:53 tamara>


Just a few links. I don't know if this is a good collection anymore. I also don't know why these aren't just regular posts.

** CSS

 - [[https://css-tricks.com/autoprefixer/][Autoprefixer]] [[https://github.com/postcss/autoprefixer][(GitHub)]] is a CSS post-processor that automatically adds CSS vendor prefixes and fixes the CSS to work in many browser versions that don't yet have full support for CSS features. See also "Can I Use" below.

 - [[http://caniuse.com/][Can I Use]] shows which browsers support which features.

 - [[http://flexboxin5.com/][Flexbox in 5 minutes]] is a nice application that introduces the CSS flexbox feature. See also: [[https://css-tricks.com/snippets/css/a-guide-to-flexbox/][A Complete Guide to Flexbox]].

 - [[https://css-tricks.com/][CSS-Tricks Blog]] is a great site for learning about nify CSS stuff.

** Databases

 - [[http://blog.donwilson.net/2011/11/constructing-a-less-than-simple-query-with-rails-and-arel/][Constructing a less than simple query with rails and arel]] This is from back in 2011, so is probably out of date, but still contains some fascinating use of AREL instead of writing straight SQL.

 - [[http://jpospisil.com/2014/06/16/the-definitive-guide-to-arel-the-sql-manager-for-ruby.html][The definitive guide to Arel, the SQL manager for Ruby]] This is more recent, still talking about using [[https://github.com/rails/arel][AREL]] but in much more depth.

 - [[http://patshaughnessy.net/2015/6/18/dont-let-your-data-out-of-the-database][Dont Let Your Data Out of the Database - Pat Shaughnessy]]

** Design

 - [[http://www.webdesignerdepot.com/2014/06/6-steps-to-perfecting-minimalism-in-web-design/][6 Steps to Perfecting Minimalism in Web Design]] with a great example site by [[http://www.briandanaher.com/][Brian Danahar]].

** Docker

 - [[http://docs.docker.com/compose/rails/][Getting Started with Compose and Rails]]

 - [[http://tech.paulcz.net/2015/03/optimizing-your-dockerfiles/][Optimizing your Dockerfiles]]

 - [[http://robots.thoughtbot.com/rails-on-docker][Rails on Docker (via Thoughtbot)]]

 - [[https://blog.abevoelker.com/rails-development-using-docker-and-vagrant/][Rails Development Using Docker and Vagrant (Abe Voelker)]]

 - [[http://www.atlashealth.com/blog/2014/09/persistent-ruby-gems-docker-container/#.VRq0d5NjOfg][How to Create a Persistent Ruby Gems Container with Docker By Phil Misiowiec]]

 - [[http://blog.giantswarm.io/getting-started-with-microservices-using-ruby-on-rails-and-docker][Docker and Microservices]]

 - [[http://www.ybrikman.com/writing/2015/05/19/docker-osx-dev/][A Productive Development Environment with Docker on OS/X]] A good write-up on using docker in rails development.

** Emacs

 - Jekor's Emacs Tutorials: [[https://www.youtube.com/playlist?list=PLxj9UAX4Em-IiOfvF2Qs742LxEK4owSkr]]

   Super set of videos showing the basics of using Emacs. Very good for visual learners new to Emacs.

 - [[https://www.masteringemacs.org/][Mastering Emacs]] web site and now e-book by Emacs master Mickey Petersen [[http://twitter.com/mickeynp][twitter]]. Blog posts about using Emacs's more advanced and powerful features.

** Javascript

 - [[https://github.com/getify/You-Dont-Know-JS][You Don't Know JS]] Kyle Simpson's tour de force on JavaScript in online form.

 - [[http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3][Javascript Abstract Equality Comparison Algorithm]]

 - [[https://github.com/rwaldron/idiomatic.js][Writing Idiomatic Javascript]]

*** Angular

 - [[https://github.com/johnpapa/angular-styleguide][Opinionated Style Guide]] by [[http://johnpapa.net/][John Papa]] [[https://twitter.com/john_papa][(twitter)]]

*** Aurelia.IO

 - [[http://aurelia.io/][aurelia.io]] - a newish (April 2015) JS client framework using pretty simple convention over configuration to speed up SPA development. [[http://durandaljs.com/][Durandel.JS]] is the previous generation of aurelia.

*** React.JS

 - [[https://www.airpair.com/reactjs/posts/reactjs-a-guide-for-rails-developers][React.JS and Rails]] by [[https://github.com/fervisa][Fernando Villalobos]]. A really clear tutorial for using React.JS with Rails, including [[https://github.com/fervisa/accounts-react-rails][sample code]] [[https://github.com/tamouse/accounts-react-rails][(my fork)]].

** Jekyll

 - [[https://developmentseed.org/blog/2013/05/01/introducing-jekyll-hook/][Introducing Jekyll-hook: Run your own GitHub Pages --- Development Seed]]
 - [[http://prose.io/][Prose Â· A Content Editor for GitHub]], [[https://github.com/prose/prose][prose/prose]]
 - [[http://cloudcannon.com/][Build websites in HTML or Jekyll. Have your non-technical team update inline - CloudCannon]]

** Rails

 - [[http://www.sitepoint.com/enumerated-types-with-activerecord-and-postgresql/?utm_source=rubyweekly&utm_medium=email][Enumerated Types with ActiveRecord and PostgreSQL]]

 - [[http://www.sitepoint.com/rails-application-templates-real-world][Rails Application Templates in the Real World]] Template All The Things!! [[https://gist.github.com/tamouse/bd7438f7722ae1d6b314][My Rails App Template]]

 - [[http://bparanj.blogspot.ie/2011/07/reserved-words-in-rails.html][A list of reserved words in Rails]]

 - [[http://adamniedzielski.github.io/blog/2015/01/31/11-easy-to-fix-ruby-slash-ruby-on-rails-mistakes/][Adam Niedzeilski: 10 easy-to-fix Ruby / Ruby on Rails mistakes]]

 - [[http://stackoverflow.com/questions/549/the-definitive-guide-to-forms-based-website-authentication][Definitive Guide to Forms-based Authentication]]

 - [[http://spin.atomicobject.com/2015/01/26/data-driven-rails-controllers/][Data Driven Controllers]]

 - [[http://brandonhilkert.com/blog/page-specific-javascript-in-rails/][Page-specific Javascript in Rails]]

 - [[https://speakerdeck.com/kfaustino/rails-testing-antipatterns][Rails Testing Antipatterns talk]]

 - [[http://www.justinweiss.com/articles/how-to-preload-rails-scopes/][How to preload Rails scopes - Justin Weiss]]

** Ruby

 - [[http://www.saturnflyer.com/blog/jim/2015/01/20/ruby-forwardable-deep-dive/][Forwardable Deep Dive]]

 - [[http://www.sitepoint.com/new-methods-ruby-2-2/][New Methods in Ruby 2.2]]

 - [[http://viget.com/extend/just-use-double-quoted-ruby-strings][Just use double quoted strings]]

 - [[https://www.reddit.com/r/ruby/comments/29hr4x/whats_youre_favorite_ruby_trick_or_quirk_that/][Whats youre favorite ruby trick or quirk that most people dont know about. ruby]]

 - [[http://plugins.jetbrains.com/update/index?pr=ruby&updateId=19837][Docker support in RubyMine]]

** Shell, Command Line, Bash, etc.

 - [[http://www.learnenough.com/command-line-tutorial][Learn Enough Command Line To Be Dangerous]] -- by Michael Hartl of RailsTutorial fame.

** Testing

 - Randy Coulman has written a [[http://randycoulman.com/blog/categories/getting-testy/][series on testing]] that I think you'll find useful.

** Tools

*** Version Control, Git, etc

 - [[https://about.futurelearn.com/blog/telling-stories-with-your-git-history/][Telling stories with your Git history - FutureLearn]]

 - [[https://about.futurelearn.com/blog/a-commit-message-from-our-repo-2/][The Importance of Writing Good Commit Messages]] -- a follow-up to the previous link.
