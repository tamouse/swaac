* Using Emacs's org-mode and editing YAML frontmatter in Jekyll posts
  :PROPERTIES:
  :CUSTOM_ID: using-emacss-org-mode-and-editing-yaml-frontmatter-in-jekyll-posts
  :END:

*WARNING: This is old and likely obsolete.*

- published date: 2015-05-25 10:20
- keywords: ["babel", "emacs", "frontmatter", "jekyll", "learning", "org-mode", "yaml"]
- source: [[https://gist.github.com/tamouse/eb8432d916459b180007]]

Poking around a bit yesterday and this morning, I have been looking for an answer to the question: "How can I edit YAML frontmatter in a Jekyll post written with Emacs's org-mode?"

Whew!! long question. I asked on the =#emacs= channel on =irc.freenode.net=, but no one had any answers there. I asked on =stackoverflow= and Google+ Emacs Community.

For the purposes of asking, I wrote up a [[https://gist.github.com/tamouse/eb8432d916459b180007][gist]] showing succinctly the issues I was having and the final answer I got on G+.

--------------

** The Problem:
   :PROPERTIES:
   :CUSTOM_ID: the-problem
   :END:

I've been through the links on orgmode.com about doing this, but there's still something missing about it for me.

Jekyll posts and pages begin with YAML frontmatter. This is placed in the .org file with =#+BEGIN_HTML= / =#+END_HTML= guards. That limits me to sub-editing that section (with =C-c '=) in =html-mode=. I can't switch to =yaml-mode= and back to =html-mode= to edit it as YAML, though, as it somehow loses context and can't switch out of the sub-edit mode.

Is there some way to do what I wish, i.e. edit the frontmatter in YAML mode?

File =1-with-html.org-raw= shows what one is "supposed" to do, place the frontmatter ins the html block, and this renders exactly as I'd prefer it, but doesn't let me edit the content in =yaml-mode=, only =html-mode=. This renders out correctly with running =jekyll build=.

File =4-with-yaml.org-raw= shows what was suggested, with a src block for yaml text, and using the =:results html= flag. This ends up causing the block's content to be rendered in markdown as a verbatum block, i.e., pushed to the right 4 spaces. That causes problems when run through jekyll, as it renders the frontmatter as content.

What I need is for that source YAML block to be rendered just as is, i.e. copied directly without changes at all. The initial suggestion to add =:result html= did not do as I'd hoped, sadly.

*** The org-mode post source, using html blocks
    :PROPERTIES:
    :CUSTOM_ID: the-org-mode-post-source-using-html-blocks
    :END:

Using the standard =#+BEGIN_HTML= / =#+END_HTML=:

{% gist tamouse/eb8432d916459b180007 1-with-html.org-raw %}

Give the desired output:

{% gist tamouse/eb8432d916459b180007 2-with-html.md-raw %}

and:

{% gist tamouse/eb8432d916459b180007 3-with-html.html-raw %}

*** The org-mode post source, using src yaml blocks
    :PROPERTIES:
    :CUSTOM_ID: the-org-mode-post-source-using-src-yaml-blocks
    :END:

Using =#+begin_src yaml= :

{% gist tamouse/eb8432d916459b180007 4-with-yaml.org-raw %}

Permitted me to edit the block in YAML mode, but when it was output, it gave a verbatum markdown block for the YAML, so it looked like content rather than front matter:

```text
