
*WARNING: This is old and likely obsolete.*

* Posting a file using the fetch API
- Time-stamp: <2020-03-23 05:07:33 tamara>
- published date: [2018-11-06 Tue 13:17]
- keywords: javascript, fetch, file upload

I'm investigating this for work

See [[https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Uploading_a_file][MDN: Uploading a file (fetch)]]

#+BEGIN_QUOTE
Files can be uploaded using an HTML <input type="file" /> input element, FormData() and fetch().
#+END_QUOTE

#+BEGIN_SRC rjsx
  let formData = new FormData();

  const fileField = document.querySelector("input[type='file']");

  formData.append('username', 'abc123');

  // file fields provide a collection of files, apparently.
  formData.append('avatar', fileField.files[0]);

  fetch('https://example.com/profile/avatar', {
      method: 'PUT',
      headers: {
          'Content-type': 'application/x-www-form-urlencoded'
      },
      body: formData,
  })
      .then(response => response.json())
      .catch(error => console.error('Error:', error))
      .then(response => console.log('Success:', JSON.stringify(response)));
#+END_SRC
In a React context, the information would be obtained using a React `ref` instead of the POJS `querySelector`, but it ends up close to the same afterwards:

#+BEGIN_SRC rjsx
  fileFieldRef = React.createRef()

  handleSubmit = () => {
      let formData = new FormData()
      const fileField = this.fileFieldRef.current

      formData.append('username', 'abc123')
      formData.append('avatar', fileField.files[0])

      fetch('https://example.com/profile/avatar', {
          method: 'PUT',
          headers: {
              'Content-type': 'application/x-www-form-urlencoded'
          },
          body: formData,
      })
          .then(response => response.json())
          .catch(error => console.error('Error:', error))
          .then(response => console.log('Success:', JSON.stringify(response)));
  }

  // ...

  render() {
      return (
          <form onSubmit={this.handleSubmit}>
            <input type="file" ref={this.fileFieldRef}/>
          </form>
      )
  }
#+END_SRC
