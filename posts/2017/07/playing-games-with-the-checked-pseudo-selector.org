*WARNING: This is old and likely obsolete.*

* Playing games with the :checked pseudo-selector
  :PROPERTIES:
  :CAPTURE_DATE: 2017-07-06 01:25
  :END:

- keywords: css, checked
- source: [[https://codepen.io/tamouse/pen/YQjVNb?editors=1100]]

I'm not sure what made me think of this, but I got a wild hair and thought I'd try it out.

The =:checked= CSS pseudo-selector lets you select a /checked/ checkbox or radio button. The question I wondered, would this be a cheap-azz way of making a sliding sidebar? And the answer is, yes it could.

Over at [[https://codepen.io/tamouse/pen/YQjVNb?editors=1100][codepen]] I left a pen showing just that:

#+BEGIN_HTML
  <iframe height="265" scrolling="no" title="what can you do with :checked?" src="//codepen.io/tamouse/embed/YQjVNb/?height=265&amp;theme-id=0&amp;default-tab=result&amp;embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">
See the Pen what can you do with :checked? by Tamara Temple (@tamouse)
on CodePen.
  </iframe>
#+END_HTML

Some of the interesting bits:

- The body is set to =display: flex= and =flex-direction: row=, which would normally put the 3 major body parts, =input=, =aside=, and =article= horizontally, but,

- The input checkbox is positioned absolute taking it out of the flex flow, so only the =aside= and =article= are flexed

- After setting everything up for the "normal" state, with the checkbox /un/checked, and the sidebar /hidden/, I added the last CSS rule to display the sidebar when the input checkbox is checked.

*** normal state

#+BEGIN_SRC css
    .sidebar {
      width: 20px;
      background: tomato;
      padding-top: 40px;
      > * {
        display: none;
      }
    }
#+END_SRC

*** checked state

#+BEGIN_SRC css
    input.sidebar-toggle:checked ~ .sidebar {
        width: 200px;
      > * {
        display: inherit;
      }
    }
#+END_SRC

Of course, this could be taken in all sorts of directions, but I wanted to try this out to see if it works.
